В планах сделать deflate сжатие.

Также в планах генерить сишный хидер.

Также в планах генерить класс, который обладает определенным интерфейсом,
возвращает указатель на данные, размер данных, и некоторую доп инфу 
(в основном, HTTP-specific).

Тут есть нюанс. Либо делаем один класс, и все указатели на данные передаем 
ему в конструктор - ук. на данные, размер, ук. на mime, ук. на last-modified - 
итого: 4x4 байт - 16. Хз, сколько кода. Но это RAM.

Второй вариант - это генерить каждый раз (для каждого ресурса) новый класс.
Интерфейс - см src/iresourcefile.h
Тут имеется vtable на 6 функций (уже 6x4 = 24 байта), плюс ук. на vtable у 
экземпляра, код каждой функции, даже если будем возвращать указатель на 
статический массив. На первый взгляд, выглядит пожирнее. Зато - ROM

ROMа у нас обычно побольше, чем RAMа, примерно в 4-6 раз, так что наверное 
имеет смысл более активно использовать ROM.